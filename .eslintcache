[{"C:\\Users\\Ryan\\documents\\multi-app\\src\\index.tsx":"1","C:\\Users\\Ryan\\documents\\multi-app\\src\\App.tsx":"2","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\HomePage.tsx":"3","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\nav\\Nav.tsx":"4","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\InfiniteScrollPage.tsx":"5","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\infinite-scroll\\InfiniteScroll.tsx":"6","C:\\Users\\Ryan\\documents\\multi-app\\src\\hooks\\unsplash.tsx":"7","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\infinite-scroll\\PhotoBox.tsx":"8","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\CounterGamePage.tsx":"9","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\counter-game\\CounterGame.tsx":"10","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\SportsQuizPage.tsx":"11","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\sports-quiz\\SportsQuiz.tsx":"12","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\sports-quiz\\MultiChoice.tsx":"13","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\sports-quiz\\TrueFalse.tsx":"14","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\CartPage.tsx":"15","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\cart\\Cart.tsx":"16","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\ProductsPage.tsx":"17","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\products\\Products.tsx":"18","C:\\Users\\Ryan\\documents\\multi-app\\src\\context\\product\\productContext.tsx":"19","C:\\Users\\Ryan\\documents\\multi-app\\src\\context\\product\\productTypes.tsx":"20","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\products\\Product.tsx":"21","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\TodoPage.tsx":"22","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\todo\\Todo.tsx":"23","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\GrudgeListPage.tsx":"24","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\grudges\\GrudgeList.tsx":"25"},{"size":197,"mtime":1607477561611,"results":"26","hashOfConfig":"27"},{"size":1496,"mtime":1608171278953,"results":"28","hashOfConfig":"27"},{"size":115,"mtime":1607477755691,"results":"29","hashOfConfig":"27"},{"size":1021,"mtime":1608169681994,"results":"30","hashOfConfig":"27"},{"size":245,"mtime":1607482763283,"results":"31","hashOfConfig":"27"},{"size":1259,"mtime":1607737437715,"results":"32","hashOfConfig":"27"},{"size":1305,"mtime":1607655454221,"results":"33","hashOfConfig":"27"},{"size":738,"mtime":1607652466223,"results":"34","hashOfConfig":"27"},{"size":196,"mtime":1607817265925,"results":"35","hashOfConfig":"27"},{"size":1515,"mtime":1607817256953,"results":"36","hashOfConfig":"27"},{"size":221,"mtime":1607739068947,"results":"37","hashOfConfig":"27"},{"size":3199,"mtime":1607909240654,"results":"38","hashOfConfig":"27"},{"size":1469,"mtime":1607909440226,"results":"39","hashOfConfig":"27"},{"size":787,"mtime":1607909155919,"results":"40","hashOfConfig":"27"},{"size":184,"mtime":1607909783270,"results":"41","hashOfConfig":"27"},{"size":110,"mtime":1607909776068,"results":"42","hashOfConfig":"27"},{"size":208,"mtime":1607910104418,"results":"43","hashOfConfig":"27"},{"size":423,"mtime":1607913233411,"results":"44","hashOfConfig":"27"},{"size":1181,"mtime":1607912536470,"results":"45","hashOfConfig":"27"},{"size":308,"mtime":1607911905274,"results":"46","hashOfConfig":"27"},{"size":299,"mtime":1607913196649,"results":"47","hashOfConfig":"27"},{"size":184,"mtime":1608169730339,"results":"48","hashOfConfig":"27"},{"size":1330,"mtime":1608170942261,"results":"49","hashOfConfig":"27"},{"size":217,"mtime":1608171251385,"results":"50","hashOfConfig":"27"},{"size":951,"mtime":1608171742356,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1bbgsj8",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ryan\\documents\\multi-app\\src\\index.tsx",[],["107","108"],"C:\\Users\\Ryan\\documents\\multi-app\\src\\App.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\HomePage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\nav\\Nav.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\InfiniteScrollPage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\infinite-scroll\\InfiniteScroll.tsx",["109"],"import React from 'react';\r\nimport './InfiniteScroll.styles.scss';\r\nimport useUnsplash from './../../hooks/unsplash';\r\nimport { Status } from '../../hooks/unsplash';\r\nimport PhotoBox from './PhotoBox';\r\n\r\nconst InfiniteScroll = () => {\r\n  const [searchInput, setSearchInput] = React.useState('');\r\n  const [page, setPage] = React.useState(1);\r\n  const [searchTerm, setSearchTerm] = React.useState('cars');\r\n  const { photos, status } = useUnsplash(searchTerm, page);\r\n\r\n  if (status === Status.rejected) return <h1>Something went wrong</h1>;\r\n  if (status === Status.pending) return <h1>loading</h1>;\r\n\r\n  return (\r\n    <main className='scroll-container'>\r\n      <section className='search-bar'>\r\n        <label htmlFor='search'>Search Below</label>\r\n        <input\r\n          value={searchInput}\r\n          onChange={(e) => setSearchInput(e.target.value)}\r\n          type='text'\r\n          autoFocus\r\n        />\r\n        <button onClick={() => setSearchTerm(searchInput)}>Search</button>\r\n      </section>\r\n      <section className='image-gallery'>\r\n        {photos &&\r\n          photos.map((photo) => {\r\n            return <PhotoBox key={photo.id} photo={photo} />;\r\n          })}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","C:\\Users\\Ryan\\documents\\multi-app\\src\\hooks\\unsplash.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\infinite-scroll\\PhotoBox.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\CounterGamePage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\counter-game\\CounterGame.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\SportsQuizPage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\sports-quiz\\SportsQuiz.tsx",["110"],"import React, { useEffect } from 'react';\r\nimport TrueFalse from './TrueFalse';\r\nimport MultiChoice from './MultiChoice';\r\n\r\n// Types\r\n\r\nexport type TQuestion = {\r\n  type: string;\r\n  question: string;\r\n  correct_answer: string;\r\n  incorrect_answers: string[];\r\n};\r\n\r\ntype TAction =\r\n  | {\r\n      type: 'SET_LOADING';\r\n    }\r\n  | {\r\n      type: 'SET_ERROR';\r\n    }\r\n  | {\r\n      type: 'SET_DATA';\r\n      payload: TQuestion[];\r\n    };\r\n\r\ntype TState = {\r\n  questions: TQuestion[] | null;\r\n  error: boolean;\r\n  loading: boolean;\r\n};\r\n\r\n// Reducer\r\nconst reducer = (state: TState, action: TAction): TState => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return {\r\n        questions: null,\r\n        error: false,\r\n        loading: true,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        questions: action.payload,\r\n        error: false,\r\n        loading: false,\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      throw new Error('Action not supported');\r\n  }\r\n};\r\n\r\n// Initial State\r\nconst initialState: TState = {\r\n  questions: [],\r\n  error: false,\r\n  loading: false,\r\n};\r\n\r\nconst SportsQuiz = () => {\r\n  const [data, dispatch] = React.useReducer(reducer, initialState);\r\n  const { error, loading, questions } = data;\r\n  const [questionIdx, setQuestionIdx] = React.useState(0);\r\n  const [showResultsButton, setShowResultsButton] = React.useState(false);\r\n  const [correctAnswers, setCorrectAnswers] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      dispatch({ type: 'SET_LOADING' });\r\n      try {\r\n        const res = await fetch(\r\n          `https://opentdb.com/api.php?amount=10&category=21&difficulty=easy`\r\n        );\r\n        const { results } = await res.json();\r\n        dispatch({ type: 'SET_DATA', payload: results });\r\n      } catch (e) {\r\n        dispatch({ type: 'SET_ERROR' });\r\n      }\r\n    };\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const checkIfCorrect = (correctAnswer: string, answer: string) => {\r\n    if (correctAnswer === answer) {\r\n      setCorrectAnswers((c) => c + 1);\r\n    }\r\n  };\r\n\r\n  const setNextQuestion = () => {\r\n    if (!questions) return;\r\n    if (questionIdx === questions.length - 2) {\r\n      setShowResultsButton(true);\r\n    }\r\n    setQuestionIdx((i) => i + 1);\r\n  };\r\n\r\n  if (error) return <h1>Error</h1>;\r\n  if (loading) return <h1>Loading...</h1>;\r\n\r\n  if (!questions) return <h1>Error</h1>;\r\n\r\n  const currentQuestion = questions[questionIdx];\r\n\r\n  if (!currentQuestion) return <h1>Eggs and bacon</h1>;\r\n\r\n  return (\r\n    <section className='quiz-container'>\r\n      <header>\r\n        <h1>Sports Quiz</h1>\r\n      </header>\r\n      {currentQuestion.type === 'boolean' ? (\r\n        <TrueFalse checkIfCorrect={checkIfCorrect} question={currentQuestion} />\r\n      ) : (\r\n        <MultiChoice\r\n          checkIfCorrect={checkIfCorrect}\r\n          question={currentQuestion}\r\n        />\r\n      )}\r\n      {showResultsButton ? (\r\n        <button>Show Results</button>\r\n      ) : (\r\n        <button onClick={setNextQuestion}>Next Question</button>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SportsQuiz;\r\n","C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\sports-quiz\\MultiChoice.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\sports-quiz\\TrueFalse.tsx",["111","112","113"],"import React, { FC } from 'react';\r\nimport { TQuestion } from './SportsQuiz';\r\n\r\ntype Props = {\r\n  question: TQuestion;\r\n\r\n  checkIfCorrect: (a: string, b: string) => void;\r\n};\r\n\r\nconst TrueFalse: FC<Props> = ({ question, checkIfCorrect }) => {\r\n  const [showResult, setShowResult] = React.useState<boolean | null>(null);\r\n  const {\r\n    question: currentQuestion,\r\n    correct_answer,\r\n    incorrect_answers,\r\n  } = question;\r\n\r\n  return (\r\n    <section className='true-false'>\r\n      <h2>{currentQuestion}</h2>\r\n      <button onClick={() => checkIfCorrect(correct_answer, 'true')}>\r\n        True\r\n      </button>\r\n      <button onClick={() => checkIfCorrect(correct_answer, 'false')}>\r\n        False\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default React.memo(TrueFalse);\r\n","C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\CartPage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\cart\\Cart.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\ProductsPage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\products\\Products.tsx",["114"],"import React from 'react';\r\nimport { useProductContext } from '../../context/product/productContext';\r\nimport Product from './Product';\r\n\r\nconst Products = () => {\r\n  const { products, status } = useProductContext();\r\n\r\n  return (\r\n    <>\r\n      {products &&\r\n        products.map((product) => {\r\n          return <Product key={product.id} product={product} />;\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\Ryan\\documents\\multi-app\\src\\context\\product\\productContext.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\context\\product\\productTypes.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\products\\Product.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\TodoPage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\todo\\Todo.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\pages\\GrudgeListPage.tsx",[],"C:\\Users\\Ryan\\documents\\multi-app\\src\\components\\grudges\\GrudgeList.tsx",["115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":9,"column":16,"nodeType":"123","messageId":"124","endLine":9,"endColumn":23},{"ruleId":"121","severity":1,"message":"125","line":70,"column":10,"nodeType":"123","messageId":"124","endLine":70,"endColumn":24},{"ruleId":"121","severity":1,"message":"126","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":20},{"ruleId":"121","severity":1,"message":"127","line":11,"column":22,"nodeType":"123","messageId":"124","endLine":11,"endColumn":35},{"ruleId":"121","severity":1,"message":"128","line":15,"column":5,"nodeType":"123","messageId":"124","endLine":15,"endColumn":22},{"ruleId":"121","severity":1,"message":"129","line":6,"column":21,"nodeType":"123","messageId":"124","endLine":6,"endColumn":27},{"ruleId":"121","severity":1,"message":"130","line":45,"column":10,"nodeType":"123","messageId":"124","endLine":45,"endColumn":17},{"ruleId":"121","severity":1,"message":"131","line":45,"column":19,"nodeType":"123","messageId":"124","endLine":45,"endColumn":29},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"@typescript-eslint/no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","'correctAnswers' is assigned a value but never used.","'showResult' is assigned a value but never used.","'setShowResult' is assigned a value but never used.","'incorrect_answers' is assigned a value but never used.","'status' is assigned a value but never used.","'grudges' is assigned a value but never used.","'setGrudges' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]